<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<artifactId>sample</artifactId>
		<groupId>com.nabla.project.servers.sample</groupId>
		<version>1.0.1-SNAPSHOT</version>
		<relativePath></relativePath>
	</parent>
	<artifactId>bower-pom</artifactId>
	<packaging>pom</packaging>
	<name>Nabla Bower Components</name>
	<description>Bower components POM</description>
	<url>https://github.com/AlbanAndrieu/nabla-servers-bower</url>

	<scm>
		<connection>scm:git:git://github.com/AlbanAndrieu/nabla-servers-bower.git</connection>
		<developerConnection>scm:git:git@github.com:AlbanAndrieu/nabla-servers-bower.git</developerConnection>
		<tag>HEAD</tag>
		<url>https://github.com/AlbanAndrieu/nabla-servers-bower</url>
	</scm>

	<issueManagement>
		<system>GitHub Issues</system>
		<url>https://github.com/AlbanAndrieu/nabla-servers-bower/issues</url>
	</issueManagement>

	<ciManagement>
		<system>Jenkins</system>
		<url>${JOB_URL}</url>
	</ciManagement>

	<properties>
		<maven.frontend.plugin.version>1.5</maven.frontend.plugin.version>
		<node.version>8.1.4</node.version>
		<!--<npm.version>2.14.12</npm.version>-->
		<!--<node.version>4.3.1</node.version>-->
		<npm.version>5.3.0</npm.version>
		<yarn.version>0.16.1</yarn.version>
	</properties>

	<build>
		<!--
        <sourceDirectory>src</sourceDirectory>
        <testSourceDirectory>test</testSourceDirectory>
        -->

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>${maven.clean.plugin.version}</version>
				<configuration>
					<filesets>
						<fileset>
							<directory>${project.basedir}</directory>
							<includes>
								<include>.bower/</include>
								<include>.node_cache/</include>
								<include>.node_tmp/</include>
								<include>.tmp/</include>
								<include>.sass-cache/</include>
								<include>node_modules/</include>
								<include>node/</include>
								<include>bower_components/</include>
								<include>components/**/node_modules/</include>
								<include>components/**/.bower/</include>
								<include>components/**/bower_components/</include>
								<include>components/**/bower_repo/</include>
								<include>components/**/.tmp/</include>
								<include>components/**/.sass-cache/</include>
								<!--<include>lib/</include>-->
								<!--<include>build/</include>-->
								<include>docs/</include>
								<include>dist/</include>
							</includes>
							<excludes>
								<!-- Allow mvn clean install > install.log -->
								<exclude>**/build.log</exclude>
								<exclude>**/install.log</exclude>
							</excludes>
							<followSymlinks>false</followSymlinks>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>${maven.frontend.plugin.version}</version>

				<executions>
					<execution>
						<id>install node and npm</id>
						<phase>validate</phase>
						<goals>
							<goal>install-node-and-npm</goal>
						</goals>
					</execution>

					<execution>
						<id>npm install</id>
						<phase>initialize</phase>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>install --no-optional</arguments>
						</configuration>
					</execution>

					<execution>
						<id>grunt check</id>
						<phase>compile</phase>
						<goals>
							<goal>grunt</goal>
						</goals>
						<configuration>
							<arguments>check</arguments>
						</configuration>
					</execution>

					<execution>
						<id>grunt default</id>
						<phase>compile</phase>
						<goals>
							<goal>grunt</goal>
						</goals>
						<configuration>
							<arguments>default</arguments>
						</configuration>
					</execution>

					<!--release:prepare
                    release:update-versions-->
					<execution>
						<id>grunt bump</id>
						<!--<phase>prepare-package</phase>-->
						<phase>install</phase>
						<goals>
							<goal>grunt</goal>
						</goals>
						<configuration>
							<arguments>bump</arguments>
						</configuration>
					</execution>

					<execution>
						<id>grunt publish</id>
						<phase>deploy</phase>
						<goals>
							<goal>grunt</goal>
						</goals>
						<configuration>
							<arguments>publish</arguments>
						</configuration>
					</execution>
				</executions>

				<configuration>
					<nodeVersion>v${node.version}</nodeVersion>
					<npmVersion>${npm.version}</npmVersion>
					<yarnVersion>v${yarn.version}</yarnVersion>
					<!--<installDirectory>target</installDirectory>-->
				</configuration>
			</plugin>
			<!--
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>clean-bower</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>./clean.sh</executable>
                            <workingDirectory>${basedir}</workingDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>lcovFileForSonar</id>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<echo message="Copying LCOV file lcov-karma.info for Sonar purpose to target directory for nabla-styles"></echo>
								<!--
                                <copy todir="${basedir}/target" flatten="true" overwrite="true" failonerror="true">
                                    <fileset dir="${basedir}/target/nabla-styles-karma-coverage/">
                                        <include name="lcov-karma.info" />
                                    </fileset>
                                </copy>
                                -->

								<concat destfile="${basedir}/target/lcov-karma.info" force="no">
									<filelist dir="${basedir}/target/root-karma-coverage/" files="lcov-karma.info,lcov-karma.txt"></filelist>
									<filelist dir="${basedir}/target/nabla-styles-karma-coverage/" files="lcov-karma.info,lcov-karma.txt"></filelist>

									<!--
									<fileset dir="${basedir}/target/ri-tools-karma-coverage/" includes="sections/*.xml" excludes="lcov-karma.xml,lcov.xml" />
									-->
								</concat>

								<!--
                               <concat destfile="${basedir}/target/lcov.info" force="no">
								   <filelist dir="${basedir}/target/root-protractor-coverage/" files="lcov.info,lcov.txt" />
								   <filelist dir="${basedir}/target/nabla-styles-protractor-coverage/" files="lcov.info,lcov.txt" />
								</concat>
								-->

								<!--
                                <path id="sourceDirectory.path">
                                  <pathelement location="${basedir}/components/nabla-styles" />
                                </path>

                                <pathconvert targetos="unix" property="relativeSourceDirectory" refid="sourceDirectory.path">
                                  <map from="${basedir}/" to="" />
                                </pathconvert>

                                <echo message="Base dir: ${basedir} " />
                                <echo message="Source directory: ${project.build.sourceDirectory}" />
                                <echo message="Relative source directory: ${relativeSourceDirectory}" />
                                <echo message="Fixing a problem with a path to the JavaScript path" />
                                <replaceregexp byline="true">
                                    <regexp pattern="SF:\./todo/(.*)" />
                                    <substitution expression="SF:${relativeSourceDirectory}/\1" />
                                    <fileset dir="target">
                                        <include name="lcov-karma.info" />
                                    </fileset>
                                </replaceregexp>
                                -->

							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>sonar</id>
			<activation>
				<property>
					<name>!profile.activation</name>
				</property>
			</activation>
			<properties>
				<!--<sonar.language>js</sonar.language>-->
				<!--<sonar.exclusions>${basedir}/src/main/webapp/lib/**</sonar.exclusions>-->
				<sonar.sources>src/sample-component,components/nabla-styles/app</sonar.sources>
				<sonar.tests>src/test,test,components/nabla-styles/test</sonar.tests>
				<!--
                <sonar.javascript.lcov.reportPath>${basedir}/target/lcov-karma.info</sonar.javascript.lcov.reportPath>
				<sonar.javascript.lcov.itReportPath>${basedir}/target/lcov.info</sonar.javascript.lcov.itReportPath>
                -->
			</properties>
		</profile>
	</profiles>
</project>
